{
  "_args": [
    [
      "react-date-range@next",
      "/home/abdo/Documents/GrainRSA/newstart/server"
    ]
  ],
  "_from": "react-date-range@next",
  "_hasShrinkwrap": false,
  "_id": "react-date-range@1.0.0-beta",
  "_inCache": true,
  "_installable": true,
  "_location": "/react-date-range",
  "_nodeVersion": "8.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-date-range_1.0.0-beta_1529398339595_0.5965863307188815"
  },
  "_npmUser": {
    "email": "mehmetkamilgulen@gmail.com",
    "name": "mkg"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "name": "react-date-range",
    "raw": "react-date-range@next",
    "rawSpec": "next",
    "scope": null,
    "spec": "next",
    "type": "tag"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-date-range/-/react-date-range-1.0.0-beta.tgz",
  "_shasum": "d67957b6af0230ef5cab60d73bf287429aff3856",
  "_shrinkwrap": null,
  "_spec": "react-date-range@next",
  "_where": "/home/abdo/Documents/GrainRSA/newstart/server",
  "bugs": {
    "url": "http://github.com/Adphorus/react-date-range/issues"
  },
  "contributors": [
    {
      "name": "Burak Can",
      "email": "neoberg@gmail.com",
      "url": "https://github.com/burakcan"
    },
    {
      "name": "Mehmet Kamil Morcay",
      "email": "mehmetmorcay@gmail.com",
      "url": "https://github.com/mkg0"
    }
  ],
  "dependencies": {
    "classnames": "^2.2.1",
    "date-fns": "2.0.0-alpha.7",
    "prop-types": "^15.5.10",
    "react-list": "^0.8.8"
  },
  "description": "A React component for choosing dates and date ranges.",
  "devDependencies": {
    "autoprefixer": "^7.2.4",
    "babel-cli": "^6.26.0",
    "babel-eslint": "^8.1.2",
    "babel-jest": "^22.1.0",
    "babel-loader": "^7.1.2",
    "babel-plugin-date-fns": "^0.1.0",
    "babel-plugin-transform-export-extensions": "^6.22.0",
    "babel-plugin-transform-object-rest-spread": "^6.26.0",
    "babel-preset-env": "^1.6.1",
    "babel-preset-react": "^6.24.1",
    "css-loader": "^0.28.8",
    "enzyme": "^3.3.0",
    "enzyme-adapter-react-16": "^1.1.1",
    "eslint": "^4.15.0",
    "eslint-config-prettier": "^2.9.0",
    "eslint-plugin-import": "^2.8.0",
    "eslint-plugin-jsx-a11y": "^6.0.3",
    "eslint-plugin-prettier": "^2.4.0",
    "eslint-plugin-react": "^7.5.1",
    "html-webpack-plugin": "^2.30.1",
    "jest": "^22.1.4",
    "normalize.css": "^7.0.0",
    "postcss-import": "^11.0.0",
    "postcss-loader": "^2.0.10",
    "precss": "^2.0.0",
    "prettier": "^1.9.2",
    "react": "^16.2.0",
    "react-dom": "^16.2.0",
    "react-hot-loader": "^3.1.3",
    "style-loader": "^0.19.1",
    "webpack": "^3.10.0",
    "webpack-dev-server": "^2.9.7",
    "webpack-hot-middleware": "^2.21.0"
  },
  "directories": {},
  "dist": {
    "fileCount": 121,
    "integrity": "sha512-04xUpkD9qTq6bFpLqcYTvptw+yFl793o1YB+uCWI+SrIp0eyEE4Aw+R9jaWp5cGnxsRDUqywV0cRd8e1Ys2uYQ==",
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbKMRECRA9TVsSAnZWagAA2jQP/ik0pQRepMjWqYSKOQ8g\nqCmlRNcskPv2+Yh5/2V3yuzm1y/95JB6xftY4di820cs5D6X1af48eYMWsxn\n73zVaW0jWm1mEJr3s9Effqq9gsfM5/Eeso4E/CWmWul8ABAxqE3nMmH5690c\nBuXMuPiH8dYkmNnfS1X9buJ00QRKbLMn8wCEf1qDESKZvwCyYHACRGADirQw\n59L+E316BpA1VlubXvxF+JvBg7ZGYGFpfy5P9sLNZS/j1BNW5aYGWZzIIPVW\n87xQm4qprsrKWodpHF+Dyoj6HA5pXUnfHqqZ0Ca5sB62X5lT5haDSDpDzUa9\nvTonHvraiBXEFdHq80DWSmxsg/d5ht8f80EWQyzAX4wivoDs2DAbTIlH4gw4\nw+BxM5squlweAfEj80Q7D0STWxu6g8VswI9D9NbYRPbjGclw5q8d6HoiFuxe\nxXfHz17IBgLycR9sSLyYSBFuKFtDYHgLC66cyjARE99/PYVAyqmferism3ZE\naeWNFrpLDuEiwHT7eUx/bvQuBeRYmu5OzJAco9yu9C+x940IiQdzqrkV5/HE\nVkdz3KRnJTGCXuG4XwuB0Qi6VSlF8wg02skoxrVg9uMIlrBE7/ij9BjMHMu4\n5R1lXp70fyQXxvTq2brp/yPTspzfKnwHHTNI15/LZIomaiDoFHs6eE2sB5P4\ndRYl\r\n=IUav\r\n-----END PGP SIGNATURE-----\r\n",
    "shasum": "d67957b6af0230ef5cab60d73bf287429aff3856",
    "tarball": "https://registry.npmjs.org/react-date-range/-/react-date-range-1.0.0-beta.tgz",
    "unpackedSize": 3267544
  },
  "gitHead": "35bd8c1858982809d2fbce46ba6ea4e44082e729",
  "homepage": "https://github.com/Adphorus/react-date-range#readme",
  "keywords": [
    "date",
    "datepicker",
    "range",
    "rangepicker",
    "react"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "mkg",
      "email": "mehmetkamilgulen@gmail.com"
    },
    {
      "name": "neoberg",
      "email": "neoberg@gmail.com"
    }
  ],
  "name": "react-date-range",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^0.14 || ^15.0.0-rc || >=15.0"
  },
  "readme": "# react-date-range\n[![npm](https://img.shields.io/npm/v/react-date-range.svg?style=flat-square)](https://www.npmjs.com/package/react-date-range)\n![](https://img.shields.io/bithound/dependencies/github/adphorus/react-date-range.svg?style=flat-square)\n\n[![npm](https://img.shields.io/npm/l/react-date-range.svg?style=flat-square)]()\n[![npm](https://img.shields.io/npm/dm/localeval.svg?style=flat-square)](https://www.npmjs.com/package/react-date-range)\n\n> ⚠️ Warning: the current branch represents the new pre-release version. [Legacy version](https://github.com/Adphorus/react-date-range/tree/v0) deprecated.\n\nA date library agnostic React component for choosing dates and date ranges. Uses [date-fns](http://date-fns.org/) for date operations.\n\n### Why should you use `react-date-range`?\n\n- Stateless date operations\n- Highly configurable\n- Multiple range selection\n- Based on native js dates\n- Drag n Drop selection\n- Keyboard friendly\n\n**Live Demo :** [http://adphorus.github.io/react-date-range](http://adphorus.github.io/react-date-range)\n\n![](https://raw.githubusercontent.com/Adphorus/react-date-range/master/demo/assets/ss.png)\n\n\n## Getting Started\n### Installation\n\n```\nyarn add react-date-range@next\n```\n\nIf you don't use yarn\n```\n$ npm install --save react-date-range@next\n```\n\n## Usage\n\nYou need to import skeleton and theme styles first.\n\n```javascript\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\n```\n\n### `DatePicker`\n```javascript\nimport { Calendar } from 'react-date-range';\n\nclass MyComponent extends Component {\n\thandleSelect(date){\n\t\tconsole.log(date); // native Date object\n\t}\n\trender(){\n\t\treturn (\n\t\t\t<Calendar\n\t\t\t\tdate={new Date()}\n\t\t\t\tonChange={this.handleSelect}\n\t\t\t/>\n\t\t)\n\t}\n}\n\n```\n\n### `DateRangePicker / DateRange`\n```javascript\nimport { DateRangePicker } from 'react-date-range';\n\nclass MyComponent extends Component {\n\thandleSelect(ranges){\n\t\tconsole.log(ranges);\n\t\t// {\n\t\t// \tselection: {\n\t\t// \t\tstartDate: [native Date Object],\n\t\t// \t\tendDate: [native Date Object],\n\t\t// \t}\n\t\t// }\n\t}\n\trender(){\n\t\tconst selectionRange = {\n\t\t\tstartDate: new Date(),\n\t\t\tendDate: new Date(),\n\t\t\tkey: 'selection',\n\t\t}\n\t\treturn (\n\t\t\t<DateRangePicker\n\t\t\t\tranges={[selectionRange]}\n\t\t\t\tonChange={this.handleSelect}\n\t\t\t/>\n\t\t)\n\t}\n}\n\n```\n\n### Options\n\nProperty                             | type      | Default Value    | Desctiption\n-------------------------------------|-----------|------------------|-----------------------------------------------------------------\nlocale                               | Object    | enUS from locale | you can view full list from [here](https://github.com/Adphorus/react-date-range/tree/next/src/locale/index.js). Locales directly exported from [`date-fns/locales`](https://date-fns.org/v2.0.0-alpha.7/docs/I18n#supported-languages).\nclassName                            | String    |                  | wrapper classname\nmonths                               | Number    | 1                | rendered month count\nshowSelectionPreview                 | Boolean   | true             | show preview on focused/hovered dates\nshowMonthAndYearPickers              | Boolean   | true             | show select tags for month and year on calendar top, if false it will just display the month and year\nrangeColors                          | String[]  |                  | defines color for selection preview.\nshownDate                            | Date      |                  | initial focus date\nminDate                              | Date      |                  | defines minimum date. Disabled earlier dates\nmaxDate                              | Date      |                  | defines maximum date. Disabled later dates\ndirection                            | String    | 'vertical'       | direction of calendar months. can be `vertical` or `horizontal`\nscroll                       \t\t\t\t | Object    | { enabled: false }| infinite scroll behaviour configuration. Check out [Infinite Scroll](#infinite-scrolled-mode) section\nshowMonthArrow                       | Boolean   | true             | show/hide month arrow button\nnavigatorRenderer                    | Func      |                  | renderer for focused date navigation area. fn(currentFocusedDate: Date, changeShownDate: func, props: object)\nranges                               | *Object[] | []               | Defines ranges. array of range object\nmoveRangeOnFirstSelection(DateRange) | Boolean   | false            | move range on startDate selection. Otherwise endDate will replace with startDate.\nonChange(Calendar)                   | Func      |                  | callback function for date changes. fn(date: Date)\nonChange(DateRange)                  | Func      |                  | callback function for range changes. fn(changes). changes contains changed ranges with new `startDate`/`endDate` properties.\ncolor(Calendar)                      | String    | `#3d91ff`        | defines color for selected date in Calendar\ndate(Calendar)                       | Date      |                  | date value for Calendar\nshowDateDisplay(DateRange)           | Boolean   | true             | show/hide selection display row. Uses `dateDisplayFormat` for formatter\nonShownDateChange(DateRange,Calendar)| Function  |                  | Callback function that is called when the shown date changes\ninitialFocusedRange(DateRange)       | Object    |                  | Initial value for focused range. See `focusedRange` for usage.\nfocusedRange(DateRange)              | Object    |                  | It defines which range and step are focused. Common initial value is `[0, 0]`; first value is index of ranges, second one is which step on date range(startDate or endDate).\nonRangeFocusChange(DateRange)        | Object    |                  | Callback function for focus changes\npreview(DateRange)                   | Object    |              | displays a preview range and overwrite DateRange's default preview. Expected shape: `{ startDate: Date, endDate: Date, color: String }`\nshowPreview(DateRange)               | bool      | true             | visibility of preview\ndragSelectionEnabled(Calendar)       | bool      | true             | whether dates can be selected via drag n drop\nonPreviewChange(DateRange)           | Object    |                  | Callback function for preview changes\ndateDisplayFormat(DateRange)         | String    | `MMM D, YYYY`    | selected range preview formatter. Check out [date-fns's format option](https://date-fns.org/v2.0.0-alpha.7/docs/format)\nstaticRanges(`DefinedRange`, `DateRangePicker`) | Array   | [default preDefined ranges](https://github.com/Adphorus/react-date-range/blob/master/src/defaultRanges.js)             | -\ninputRanges(`DefinedRange`, `DateRangePicker`) | Array   | [default input ranges](https://github.com/Adphorus/react-date-range/blob/master/src/defaultRanges.js)             | -\n\n\n *shape of range:\n ```js\n\t{\n\t\tstartDate: PropTypes.object,\n\t\tendDate: PropTypes.object,\n\t\tcolor: PropTypes.string,\n\t\tkey: PropTypes.string,\n\t\tautoFocus: PropTypes.bool,\n\t\tdisabled: PropTypes.bool,\n\t\tshowDateDisplay: PropTypes.bool,\n\t}\n```\n\n#### Infinite Scrolled Mode\n\nTo enable infinite scroll set `scroll={{enabled: true}}` basically. Infinite scroll feature is affected by `direction`(rendering direction for months) and `months`(for rendered months count) props directly.\nIf you prefer, you can overwrite calendar sizes with `calendarWidth`/`calendarHeight` or each month's height/withs with `monthWidth`/`monthHeight`/`longMonthHeight` at `scroll` prop.\n\n```js\n\t// shape of scroll prop\n  scroll: {\n    enabled: PropTypes.bool,\n    monthHeight: PropTypes.number,\n    longMonthHeight: PropTypes.number, // some months has 1 more row than others\n    monthWidth: PropTypes.number, // just used when direction=\"horizontal\"\n    calendarWidth: PropTypes.number, // defaults monthWidth * months\n    calendarHeight: PropTypes.number, // defaults monthHeight * months\n  }),\n```\n\n\nTODOs\n\n- Make mobile friendly (integrate tap and swipe actions)\n- Add complex booking customization example with exposed dayRenderer prop\n- Add tests\n- Improve documentation\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/Adphorus/react-date-range.git"
  },
  "scripts": {
    "build": "NODE_ENV=production & yarn build-library & yarn build-demo",
    "build-demo": "webpack -p",
    "build-library": "babel ./src --out-dir ./dist --ignore test.js & postcss 'src/styles.scss' -d dist --ext css & postcss 'src/theme/*.scss' -d 'dist/theme' --ext css",
    "clear": "rm -rf dist/* & rm -rf demo/dist/*",
    "dev": "NODE_ENV=development & webpack-dev-server --hot --inline",
    "lint": "eslint 'src/**/*.js'",
    "preversion": "yarn clear & yarn build",
    "test": "jest"
  },
  "version": "1.0.0-beta"
}
